{"version":3,"file":"static/js/693.cd6ea5eb.chunk.js","mappings":"uSAEaA,EAAgBC,EAAAA,GAAAA,KAAH,wQAYbC,EAAiBD,EAAAA,GAAAA,MAAH,yKAcdE,GALgBF,EAAAA,GAAAA,EAAH,iEAKIA,EAAAA,GAAAA,MAAH,qJASdG,EAAkBH,EAAAA,GAAAA,OAAH,6sBA8BfI,EAAoBJ,EAAAA,GAAAA,MAAH,2GAOjBK,EAAyBL,EAAAA,GAAAA,MAAH,0J,SC1DpB,SAASM,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAgCJ,EAAAA,EAAAA,WAAS,GAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MAKHC,GAAYC,EAAAA,EAAAA,MAAlBC,KACR,GAAqBC,EAAAA,EAAAA,MAAdC,GAAP,eAEMC,EAAe,SAAAC,GACnB,OAAQA,EAAMC,OAAOf,MACnB,IAAK,OACHC,EAAQa,EAAMC,OAAOC,OACrB,MAEF,IAAK,SACHb,EAAUW,EAAMC,OAAOC,OACvB,MAEF,QACE,OAEL,EAEKC,EAAY,mCAAG,WAAMD,GAAN,4EACnBA,EAAME,iBAEAC,EAAiBnB,EAAKoB,cACtBC,EAAmBb,EAAQc,MAC/B,SAAAd,GAAO,OAAIA,EAAQR,KAAKoB,gBAAkBD,CAAnC,KAGLE,EARe,uBASjBE,EAAAA,GAAAA,KAAA,UAAcvB,EAAd,4BAA8C,CAC5CwB,SAAUD,EAAAA,GAAAA,SAAAA,aAVK,0CAefE,QAAQC,IAAI,WAAY,CAAE1B,KAAAA,EAAME,OAAAA,IAChCuB,QAAQC,IAAI,WAAYlB,GAhBT,UAiBTI,EAAW,CAAEZ,KAAAA,EAAME,OAAAA,IAjBV,QAkBjBqB,EAAAA,GAAAA,QAAA,UAAiBvB,EAAjB,wBAA6C,CACzCwB,SAAUD,EAAAA,GAAAA,SAAAA,YAnBG,kDAsBfA,EAAAA,GAAAA,MAAY,qBAAsB,CAChCC,SAAUD,EAAAA,GAAAA,SAAAA,WAEZE,QAAQC,IAAR,MAzBe,QA6BnBzB,EAAQ,IACRE,EAAU,IApDYG,EAAS,KAsBZ,0DAAH,sDAkClB,OACE,UAACf,EAAD,CAAeoC,SAAUV,EAAzB,WACE,UAACpB,EAAD,YACE,SAACD,EAAD,CACEgC,KAAK,WACLC,QAASzB,EACT0B,SAAU,kBAAMzB,GAAaD,EAAnB,IAJd,uBAQA,UAACX,EAAD,mBAEE,SAACC,EAAD,CACEkC,KAAK,OACL5B,KAAK,OACLgB,MAAOhB,EACP8B,SAAUjB,EACVkB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,UAACxC,EAAD,qBAEE,SAACC,EAAD,CACEkC,KAAK,MACL5B,KAAK,SACLgB,MAAOd,EACP4B,SAAUjB,EACVkB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,SAACtC,EAAD,CAAiBiC,KAAK,SAAtB,2BAGL,CChHc,SAASM,IACtB,OACE,2BACG,SAACpC,EAAD,KAGN,C","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","pages/NewContact/NewContact.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const PhonebookForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  height: auto;\n  padding: 20px;\n  border: 2px solid #dbb858;\n  border-radius: 10px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  background-color: #e5e7c5;\n`;\n\nexport const PhonebookLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1, 875;\n`;\n\nexport const PhonebookText = styled.p`\n  font-weight: 700;\n  font-size: 20px;\n`;\n\nexport const PhonebookInput = styled.input`\n  font: inherit;\n  padding: 8px;\n  margin: 8px 0 8px 0;\n  max-width: 80%;\n  border-radius: 8px;\n  border-color: blue;\n`;\n\nexport const PhonebookButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 20px;\n  margin-right: auto;\n  padding: 8px 8px 8px 8px;\n  border-radius: 4px;\n  border: none;\n  height: 30px;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1, 875;\n  text-transform: uppercase;\n  background-color: #2196f3;\n  color: #ffffff;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  cursor: pointer;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    border: 2px solid;\n    background-color: #21d4f3;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n    transform: scale(1.01);\n  }\n`;\n\nexport const PhonebookCheckbox = styled.input`\n  margin-right: 8px;\n  width: 24px;\n  height: 24px;\n  border: 1px solid black;\n`;\n\nexport const PhonebookCheckboxLabel = styled.label`\n  display: flex;\n  align-items: center;\n  margin: 0 0 10px 0;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1, 875;\n`;\n","import { useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport {\n  useGetContactsQuery,\n  useAddContactMutation,\n} from '..//../redux/contactsSliceApi';\nimport {\n  PhonebookForm,\n  PhonebookLabel,\n  PhonebookInput,\n  PhonebookButton,\n  PhonebookCheckbox,\n  PhonebookCheckboxLabel,\n} from './ContactForm.styled';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [personal, setPersonal] = useState(true);\n  const navigate = useNavigate();\n  const closeForm = () => navigate('/');\n\n  // console.log('personal:', personal);\n\n  const { data: contact } = useGetContactsQuery();\n  const [addContact] = useAddContactMutation();\n\n  const handleChange = event => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n\n      case 'number':\n        setNumber(event.target.value);\n        break;\n\n      default:\n        return;\n    }\n  };\n// console.log('name:', name)\n  const handleSubmit = async value => {\n    value.preventDefault();\n\n    const normalizedName = name.toLowerCase();\n    const availableContact = contact.find(\n      contact => contact.name.toLowerCase() === normalizedName\n    );\n    \n    if (availableContact) {\n      toast.info(`${name} is already in contacts!`, {\n        position: toast.POSITION.TOP_CENTER,\n      });\n      return;\n    } else {\n      try {\n        console.log('contact:', { name, number });\n        console.log('contact:', contact)\n        await addContact({ name, number });\n      toast.success(`${name} successfully added!`, {\n          position: toast.POSITION.TOP_RIGHT,\n        });\n      } catch (error) {\n        toast.error('Error adding data!', {\n          position: toast.POSITION.TOP_LEFT,\n        });\n        console.log(error);\n      }\n    }\n\n    setName('');\n    setNumber('');\n    closeForm();\n  };\n\n  return (\n    <PhonebookForm onSubmit={handleSubmit}>\n      <PhonebookCheckboxLabel>\n        <PhonebookCheckbox\n          type=\"checkbox\"\n          checked={personal}\n          onChange={() => setPersonal(!personal)}\n        />\n        Personal contact\n      </PhonebookCheckboxLabel>\n      <PhonebookLabel>\n        Name\n        <PhonebookInput\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </PhonebookLabel>\n      <PhonebookLabel>\n        Number\n        <PhonebookInput\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </PhonebookLabel>\n      <PhonebookButton type=\"submit\">Add contact</PhonebookButton>\n    </PhonebookForm>\n  );\n}\n","import ContactForm from '../../components/ContactForm/ContactForm';\n\nexport default function EditContact () {\n  return (\n    <main>\n       <ContactForm />\n    </main>\n  );\n}"],"names":["PhonebookForm","styled","PhonebookLabel","PhonebookInput","PhonebookButton","PhonebookCheckbox","PhonebookCheckboxLabel","ContactForm","useState","name","setName","number","setNumber","personal","setPersonal","navigate","useNavigate","contact","useGetContactsQuery","data","useAddContactMutation","addContact","handleChange","event","target","value","handleSubmit","preventDefault","normalizedName","toLowerCase","availableContact","find","toast","position","console","log","onSubmit","type","checked","onChange","pattern","title","required","EditContact"],"sourceRoot":""}