{"version":3,"file":"static/js/303.bacee5e5.chunk.js","mappings":"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","sources":["helpers/localStrg.js","redux/selectors.js","components/Filter/Filter.styled.js","components/Button/Button.styled.js","components/Button/Button.jsx","components/StatusFilter/StatusFilter.styled.js","components/StatusFilter/StatusFilter.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/Contact/Contact.styled.js","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx"],"sourcesContent":["const save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.log(`Error during saving ${key} to local strage; `, error.message);\n  }\n};\n\nconst load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.log(\n      `Error during getting ${key} from localStorage: `,\n      error.message\n    );\n  }\n};\n\nconst del = key => {\n  try {\n    localStorage.removeItem(key);\n  } catch (error) {\n    console.log(\n      `Error during deleting ${key}! from localStorage: `,\n      error.message\n    );\n  }\n};\n\nexport const localStrg = { save, load, del };\n\n\n","export const selectFilterValue = state => state.filter.filter;\nexport const selectFilterStatus = state => state.filter.status;\n\n","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1, 875;\n  padding: 10px, 5px;\n  margin: 0, 0, 0, 20px;\n`;\n\nexport const FilterInput = styled.input`\n  font: inherit;\n  padding: 8px;\n  margin: 8px 0 8px 8px;\n  max-width: 80%;\n  border-radius: 8px;\n  border-color: blue;\n`;\n\nexport const FilterDiv = styled.div`\ndisplay: flex;\n/* justify-content: space-between; */\nalign-items: center;\nmargin-left: 50px;\n`;\n\nexport const FilterTitle = styled.h2`\nmargin-left: 50px;\n`;","import styled from 'styled-components';\n\nexport const ButtonFilter = styled.button`\ndisplay: inline-flex;\n    padding: 8px 12px;\n    border-radius: 4px;\n    border: solid 1px blue;\n    font: inherit;\n    cursor: pointer;\n    background-color: #fff;\n\n    :hover {\n    background-color: #1565c0;\n    color: #fff;\n    transform: scale(1.02);\n  }\n  \n  :active {\n    background-color: #1565c0;\n    color: #fff;\n    box-shadow: 2px 2px 5px #fc894d;\n  }\n\n`;","import { ButtonFilter } from './Button.styled';\n\nexport const Button = ({\n  selected = false,\n  type = 'button',\n  children,\n  ...otherProps\n}) => {\n  return (\n    <ButtonFilter\n      style={\n        selected === false\n          ? { backgroundColor: ` #fff`, color: `#000` }\n          : { backgroundColor: `#1976d2`, color: `#fff`}\n      }\n      type={type}\n      {...otherProps}\n    >\n      {children}\n    </ButtonFilter>\n  );\n};\n","import styled from \"styled-components\";\n\n\nexport const WraperFilterStatus = styled.div`\ndisplay: flex;\n  gap: 8px;\n  margin-left: 50px;\n`","import { useSelector, useDispatch } from 'react-redux';\nimport { Button } from 'components/Button/Button';\nimport { statusFilters } from 'redux/constants';\nimport { selectFilterStatus } from 'redux/selectors';\nimport { setStatusFilter } from 'redux/filterSlice';\nimport { WraperFilterStatus } from './StatusFilter.styled';\n\nexport const StatusFilter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilterStatus);\n\n  const handleFilterChange = filter => dispatch(setStatusFilter(filter));\n\n  return (\n    <WraperFilterStatus>\n      <Button\n        selected={filter === statusFilters.all}\n        onClick={() => handleFilterChange(statusFilters.all)}\n      >\n        All\n      </Button>\n\n      <Button\n        selected={filter === statusFilters.personal}\n        onClick={() => handleFilterChange(statusFilters.personal)}\n      >\n        Personal\n      </Button>\n\n      <Button\n        selected={filter === statusFilters.others}\n        onClick={() => handleFilterChange(statusFilters.others)}\n      >\n        Others\n      </Button>\n    </WraperFilterStatus>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilterValue } from 'redux/selectors';\nimport { setFilter } from 'redux/filterSlice';\nimport { FilterLabel, FilterInput, FilterDiv, FilterTitle } from './Filter.styled';\nimport { RiSearchLine } from 'react-icons/ri';\nimport { StatusFilter } from 'components/StatusFilter/StatusFilter';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilterValue);\n\n  const handleFilterChange = filter => dispatch(setFilter(filter.target.value));\n\n  return (\n    <FilterLabel>\n      <FilterTitle>Find contacts by Name</FilterTitle>\n      <StatusFilter />\n      <FilterDiv>\n        <RiSearchLine\n          style={{\n            width: 36,\n            height: 36,\n            borderRadius: `8px`,\n            borderColor: `blue`,\n          }}\n        />\n        <FilterInput\n          type=\"text\"\n          value={filter}\n          onChange={handleFilterChange}\n        ></FilterInput>\n      </FilterDiv>\n    </FilterLabel>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const ContactUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: stretch;\n  margin-top: 20px;\n  margin-right: auto;\n  padding: 10px;\n  font-size: 24px;\n  background-color: #c3e6afea;\n  border-radius: 10px;\n  border: 2px solid rgba(0, 0, 0, 0.25);\n`;\n\n\n\n","import styled from 'styled-components';\n\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 8px;\n  padding: 5px 5px;\n  border: 2px solid rgba(0, 0, 0, 0.25);\n  border-radius: 10px;\n\n  :last-child {\n    margin-bottom: 0;\n  }\n\n  :hover,\n  :focus {\n    border: 2px solid;\n    background-color: #21d4f3;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  }\n`;\n\nexport const ContactButton = styled.button`\ndisplay: inline-flex;\n  align-items: center;\n  justify-content: center;\n  margin: 8px 10px 8px 20px;\n  padding: 8px 8px 8px 8px;\n  border-radius: 4px;\n  border: none;\n  height: 30px;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1, 875;\n  text-transform: uppercase;\n  background-color: #2196f3;\n  color: #ffffff;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  cursor: pointer;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    border: 2px solid;\n    background-color: #21d4f3;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n    /* transform: scale(1.01); */\n  }\n`;\n\nexport const ContactSpanDiv = styled.div`\ndisplay: flex;\njustify-content: space-between;\nmargin-left: 5px;\nmargin-right: auto;\n`;\n\nexport const ContactButtonDiv = styled.div`\ndisplay: flex;\njustify-content: space-between;\n`;\n\nexport const ContactCheckbox = styled.input`\ncolor: aliceblue;\n`","import {\n  ContactItem,\n  ContactButton,\n  ContactSpanDiv,\n  ContactButtonDiv,\n} from './Contact.styled';\nimport { useDeleteContactMutation } from '../../redux/contactsSliceApi';\nimport { useNavigate } from 'react-router-dom';\nimport { RiFunctionFill } from 'react-icons/ri';\nimport { RiStarSFill } from 'react-icons/ri';\nimport { RiDeleteBin5Line } from 'react-icons/ri';\nimport { RiEdit2Fill } from 'react-icons/ri';\nimport { localStrg } from '../../helpers/localStrg';\n\nexport default function Contact({ id, name, number }) {\n  // console.log('name:', {name, phone, id})\n  const navigate = useNavigate();\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n  const RENDER_STORAGE_KEY = 'contact-for-render-state';\n\n  let currentContactsState = localStrg.load(RENDER_STORAGE_KEY);\n  let personal = true;\n\n  if (currentContactsState && personal) {\n    personal = currentContactsState.find(\n      contact => contact.name === name\n    ).personal;\n    // console.log('personal', personal)\n  }\n\n  const handleDelete = () => {\n    deleteContact(id);\n    deleteContactFromLocal();\n  };\n\n  function deleteContactFromLocal() {\n    let currentContactsState = localStrg.load(RENDER_STORAGE_KEY);\n    let correctContactPersonIndex;\n    if (currentContactsState) {\n      currentContactsState.find(contact => contact.name === name);\n      correctContactPersonIndex = currentContactsState.findIndex(\n        contact => contact.name === name\n      );\n      currentContactsState.splice(correctContactPersonIndex, 1);\n      // console.log('currentContactsState:', currentContactsState);\n      localStrg.save(RENDER_STORAGE_KEY, currentContactsState);\n    }\n  }\n\n  return (\n    <ContactItem\n      style={\n        personal === false\n          ? { backgroundColor: ` #e1c7e9` }\n          : { backgroundColor: `#00fff2` }\n      }\n    >\n      {personal === false ? (\n        <RiFunctionFill\n          style={{\n            width: 24,\n            height: 24,\n          }}\n        />\n      ) : (\n        <RiStarSFill\n          style={{\n            color: `orange`,\n            width: 24,\n            height: 24,\n          }}\n        />\n      )}\n\n      <ContactSpanDiv>\n        <span>{name}</span> :<span>{number}</span>\n      </ContactSpanDiv>\n\n      <ContactButtonDiv>\n        <ContactButton\n          type=\"button\"\n          onClick={handleDelete}\n          disabled={isLoading}\n        >\n          <RiDeleteBin5Line\n            style={{\n              color: `orange`,\n              width: 24,\n              height: 24,\n            }}\n          />\n          Delete\n        </ContactButton>\n        <ContactButton type=\"button\" onClick={() => navigate(`/${id}`)}>\n          <RiEdit2Fill\n            style={{\n              color: `orange`,\n              width: 24,\n              height: 24,\n            }}\n          />\n          Edit\n        </ContactButton>\n      </ContactButtonDiv>\n    </ContactItem>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { selectFilterStatus, selectFilterValue } from 'redux/selectors';\n\nimport { useSelector } from 'react-redux';\nimport { ContactUl } from './ContactList.styled';\nimport { useGetContactsQuery } from '..//../redux/contactsSliceApi';\nimport Contact from 'components/Contact/Contact';\nimport { localStrg } from '../../helpers/localStrg';\n\nexport default function ContactList() {\n  const filterValue = useSelector(selectFilterValue);\n  const filterStatus = useSelector(selectFilterStatus);\n  // console.log(\"filterStatus:\", filterStatus)\n  const RENDER_STORAGE_KEY = 'contact-for-render-state';\n\n  const { data: contactsBack, error, isLoading } = useGetContactsQuery();\n  // console.log(contactsBack);\n\n  updateLocalStorage();\n\n  // console.log('data:', contacts);\n  // console.log('error:', error);\n  // console.log('isLoading:', isLoading);\n\n  let getVisibleContacts = (contacts, filter, status) => {\n    let localContact = localStrg.load(RENDER_STORAGE_KEY);\n    if (contacts)\n      switch (status) {\n        case 'personal':\n          let localPersonalContact = localContact\n            .filter(contact => contact.personal === true)\n            .map(e => e.name);\n\n          const see = (contactsBack, contactsLocal, comElement = []) => {\n            contactsBack.forEach(element => {\n              if (contactsLocal.includes(element.name)) {\n                comElement.push(element);\n              }\n            });\n            return comElement;\n          };\n          let info = see(contacts, localPersonalContact);\n\n          // console.log('info:', info);\n\n          return info.filter(contact =>\n            contact.name.toLowerCase().includes(filter.toLowerCase())\n          );\n\n        case 'others':\n          let localOtherContact = localContact\n            .filter(contact => contact.personal === false)\n            .map(e => e.name);\n          // console.log('localOtherContact:', localOtherContact);\n          const other = (contactsBack, contactsLocal, comElement = []) => {\n            contactsBack.forEach(element => {\n              if (contactsLocal.includes(element.name)) {\n                comElement.push(element);\n              }\n            });\n            return comElement;\n          };\n          let otherInfo = other(contacts, localOtherContact);\n\n          // console.log('otherInfo:', otherInfo);\n\n          return otherInfo.filter(contact =>\n            contact.name.toLowerCase().includes(filter.toLowerCase())\n          );\n\n        default:\n          return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(filter.toLowerCase())\n          );\n      }\n  };\n\n  function updateLocalStorage() {\n    if (!localStrg.load(RENDER_STORAGE_KEY)) {\n      addContactToLocal();\n    } else {\n      editContactToLocal();\n    }\n  }\n\n  function addContactToLocal() {\n    localStrg.save(RENDER_STORAGE_KEY, []);\n\n    let currentContactsState = localStrg.load(RENDER_STORAGE_KEY);\n    const contactsFromBack = contactsBack;\n\n    localStrg.save(RENDER_STORAGE_KEY, contactsFromBack);\n\n    currentContactsState = localStrg.load(RENDER_STORAGE_KEY);\n    if (currentContactsState)\n      currentContactsState.map(contact => (contact.personal = true));\n    localStrg.save(RENDER_STORAGE_KEY, currentContactsState);\n  }\n\n  function editContactToLocal() {\n    let localContact = localStrg.load(RENDER_STORAGE_KEY);\n    const contactsFromBack = contactsBack;\n    let unicElements = contacts => {\n      if (contacts)\n        contacts.forEach(element => {\n          const newElem = localContact.map(e => e.id);\n          // console.log('newElem befor if:', newElem)\n          // console.log('element.id:', element.id)\n          if (!newElem.includes(element.id)) {\n            // console.log('newElem:', newElem)\n            // console.log('element.id:', element.id)\n            unicElements = element;\n          }\n        });\n      return unicElements;\n    };\n\n    const newContact = unicElements(contactsFromBack);\n\n    const isObject = obj => {\n      return typeof obj === 'object' && obj !== null;\n      // return typeof obj === 'object' && obj !== null && !Array.isArray(obj);\n    };\n\n    //  console.log('newContact', newContact)\n\n    if (isObject(newContact)) {\n      if (!localContact.find(contact => contact.name === newContact.name));\n      // console.log('newContact', newContact)\n      // console.log('newContactFromLocal.personal:', newContactFromLocal.personal)\n      // console.log('newContact befor push', newContact)\n      // console.log('localContact before push:', localContact);\n      localContact.push(newContact);\n    }\n\n    // console.log('localContact after push:', localContact);\n    localStrg.save(RENDER_STORAGE_KEY, localContact);\n\n    let arr = localStrg.load(RENDER_STORAGE_KEY);\n    const table = {};\n    const res = arr.filter(({ name }) => !table[name] && (table[name] = 1));\n    // console.log('res:', res);\n    localStrg.save(RENDER_STORAGE_KEY, res);\n  }\n\n  let visibleContacts;\n  if (contactsBack) {\n    visibleContacts = getVisibleContacts(\n      contactsBack,\n      filterValue,\n      filterStatus\n    ).sort((a, b) => a.name.localeCompare(b.name));\n  }\n\n  // console.log('visibleContacts', visibleContacts);\n\n  return (\n    <>\n      {error && <p>Error loading, please try again </p>}\n\n      {isLoading ? (\n        <b>Loading...</b>\n      ) : (\n        <ContactUl>\n          {visibleContacts.map(({ id, name, number }) => (\n            <Contact key={id} id={id} name={name} number={number} />\n          ))}\n        </ContactUl>\n      )}\n    </>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.number.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const ContactsTitle = styled.h2`\n/* color: white; */\npadding: 10px 5px 10px 50px\n`","import Filter from '../../components/Filter/Filter';\nimport ContactList from '../../components/ContactList/ContactList';\nimport { ContactsTitle } from './Home.styled';\n\nexport default function Home() {\n  return (\n    <main>\n      <Filter />\n      <ContactsTitle>Contacts</ContactsTitle>\n      <ContactList />\n    </main>\n  );\n}\n"],"names":["localStrg","save","key","value","serializedState","JSON","stringify","localStorage","setItem","error","console","log","message","load","getItem","undefined","parse","del","removeItem","selectFilterValue","state","filter","selectFilterStatus","status","FilterLabel","styled","FilterInput","FilterDiv","FilterTitle","ButtonFilter","Button","selected","type","children","otherProps","style","backgroundColor","color","WraperFilterStatus","StatusFilter","dispatch","useDispatch","useSelector","handleFilterChange","setStatusFilter","statusFilters","onClick","width","height","borderRadius","borderColor","onChange","setFilter","target","ContactUl","ContactItem","ContactButton","ContactSpanDiv","ContactButtonDiv","Contact","id","name","number","navigate","useNavigate","useDeleteContactMutation","deleteContact","isLoading","RENDER_STORAGE_KEY","currentContactsState","personal","find","contact","correctContactPersonIndex","findIndex","splice","deleteContactFromLocal","disabled","ContactList","filterValue","filterStatus","useGetContactsQuery","contactsBack","data","obj","localContact","unicElements","contacts","forEach","element","map","e","includes","newContact","push","arr","table","res","editContactToLocal","contactsFromBack","addContactToLocal","visibleContacts","info","contactsLocal","comElement","see","toLowerCase","otherInfo","other","getVisibleContacts","sort","a","b","localeCompare","ContactsTitle","Home"],"sourceRoot":""}