{"version":3,"file":"static/js/498.674b58b2.chunk.js","mappings":"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","sources":["helpers/localStrg.js","pages/EditContact/EditContact.styled.js","components/EditForm/EditForm.styled.js","components/EditForm/EditForm.jsx","pages/EditContact/EditContact.jsx"],"sourcesContent":["const save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.log(`Error during saving ${key} to local strage; `, error.message);\n  }\n};\n\nconst load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.log(\n      `Error during getting ${key} from localStorage: `,\n      error.message\n    );\n  }\n};\n\nconst del = key => {\n  try {\n    localStorage.removeItem(key);\n  } catch (error) {\n    console.log(\n      `Error during deleting ${key}! from localStorage: `,\n      error.message\n    );\n  }\n};\n\nexport const localStrg = { save, load, del };\n","import styled from 'styled-components';\n// import { NavLink } from 'react-router-dom';\n\nexport const Overlay = styled.div`\n  background-color: #1e2129;\n  z-index: 300;\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  /* padding: 50px; */\n`;\n\nexport const Modal = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin: auto;\n  padding: 15px;\n  min-height: 40%;\n  min-width: 40%;\n  background-color: #bbd;\n  border: 3px solid red;\n  border-radius: 10px;\n`;\n\nexport const EditForm = styled.div`\n  margin: 5px;\n  height: 100%;\n  width: 100%;\n`;\n\nexport const ModalButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  margin: 20px 0 0 0;\n  /* justify-content: center; */\n  /* margin-bottom: 20px; */\n  /* margin-right: auto; */\n  padding: 8px 8px 8px 8px;\n  border-radius: 4px;\n  border: none;\n  height: 30px;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1, 875;\n  text-transform: uppercase;\n  background-color: #2196f3;\n  color: #ffffff;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  cursor: pointer;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    border: 2px solid;\n    background-color: #21d4f3;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n    transform: scale(1.01);\n  }\n`;\n\nexport const ModalTitle = styled.p`\n  margin: 0 0 20px 0;\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 1, 875;\n`;\n","import styled from 'styled-components';\n\nexport const EditPhonebookForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  height: auto;\n  padding: 20px;\n  border: 2px solid #dbb858;\n  border-radius: 10px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  background-color: #e5e7c5;\n`;\n\nexport const EditPhonebookLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1, 875;\n`;\n\nexport const EditPhonebookInput = styled.input`\n  font: inherit;\n  padding: 8px;\n  margin: 8px 0 8px 0;\n  max-width: 90%;\n  border: 1px solid;\n  border-radius: 8px;\n  border-color: blue;\n`;\n\nexport const EditPhonebookButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  margin: 20px auto 0 auto;\n  padding: 8px 8px 8px 8px;\n  border-radius: 4px;\n  border: none;\n  height: 30px;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1, 875;\n  text-transform: uppercase;\n  background-color: #2196f3;\n  color: #ffffff;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  cursor: pointer;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    border: 2px solid;\n    background-color: #21d4f3;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n    transform: scale(1.01);\n  }\n`;\n\nexport const EditPhonebookCheckbox = styled.input`\n  margin-right: 8px;\n  width: 24px;\n  height: 24px;\n  border: 1px solid black;\n`;\n\nexport const EditPhonebookCheckboxLabel = styled.label`\n  display: flex;\n  align-items: center;\n  margin: 0 0 10px 0;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1, 875;\n`;\n","import { useState } from 'react';\nimport {\n  useUpdateContactMutation,\n  useGetContactsQuery,\n} from '../../redux/contactsSliceApi';\nimport {\n  EditPhonebookForm,\n  EditPhonebookLabel,\n  EditPhonebookInput,\n  EditPhonebookCheckbox,\n  EditPhonebookCheckboxLabel,\n} from './EditForm.styled';\nimport { localStrg } from '../../helpers/localStrg';\nimport { Button } from '@chakra-ui/react';\n\nexport default function EditForm({ initialValues, onSubmit }) {\n  const [updateContact] = useUpdateContactMutation();\n  const { data: contacts } = useGetContactsQuery();\n  const RENDER_STORAGE_KEY = 'contact-for-render-state';\n\n  // console.log (contacts)\n  let corectionContacts = contacts => {\n    if (contacts)\n      return contacts.filter(contact => contact.id === initialValues.id);\n  };\n\n  const contactForEdit = corectionContacts(contacts);\n  // console.log(\n  //   'contactForEdit:',\n  //   contactForEdit.at(0).name,\n  //   contactForEdit.at(0).number\n  // );\n  const id = initialValues.id;\n  const [name, setName] = useState(contactForEdit.at(0).name);\n  const [number, setNumber] = useState(contactForEdit.at(0).number);\n  const [personal, setPersonal] = useState(true);\n\n  const handleChange = event => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n\n      case 'phone':\n        setNumber(event.target.value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = async value => {\n    value.preventDefault();\n\n    try {\n      await updateContact({ id: initialValues.id, name, number });\n    } catch (error) {\n      console.log(error);\n    }\n    updateLocalStorage();\n    onSubmit();\n  };\n\n  function updateLocalStorage() {\n    if (!localStrg.load(RENDER_STORAGE_KEY)) {\n      addContactToLocal();\n    } else {\n      editContactToLocal();\n    }\n  }\n\n  function addContactToLocal() {\n    localStrg.save(RENDER_STORAGE_KEY, []);\n    let currentContactsState = localStrg.load(RENDER_STORAGE_KEY);\n    const contactsFromBack = contacts;\n\n    localStrg.save(RENDER_STORAGE_KEY, contactsFromBack);\n    currentContactsState = localStrg.load(RENDER_STORAGE_KEY);\n    currentContactsState.map(contact => (contact.personal = true));\n    localStrg.save(RENDER_STORAGE_KEY, currentContactsState);\n  }\n\n  function editContactToLocal() {\n    let currentContactsState = localStrg.load(RENDER_STORAGE_KEY);\n\n    let correctContactPersonIndex;\n    if (currentContactsState) {\n      currentContactsState.find(\n        contact => contact.name === contactForEdit.at(0).name\n      );\n      correctContactPersonIndex = currentContactsState.findIndex(\n        contact => contact.name === contactForEdit.at(0).name\n      );\n\n      if (correctContactPersonIndex < 0) {\n        currentContactsState.push({ id, name, number, personal });\n      } else {\n        currentContactsState.splice(correctContactPersonIndex, 1, {\n          id,\n          name,\n          number,\n          personal,\n        });\n      }\n      // console.log('currentContactsState:', currentContactsState);\n      localStrg.save(RENDER_STORAGE_KEY, currentContactsState);\n    }\n    // console.log('correctContactPerson:', correctContactPerson);\n    // console.log('correctContactPersonIndex:', correctContactPersonIndex);\n  }\n\n  return (\n    <EditPhonebookForm onSubmit={handleSubmit}>\n      <EditPhonebookCheckboxLabel>\n        <EditPhonebookCheckbox\n          type=\"checkbox\"\n          checked={personal}\n          onChange={() => setPersonal(!personal)}\n        />\n        Personal contact\n      </EditPhonebookCheckboxLabel>\n      <EditPhonebookLabel>\n        Name\n        <EditPhonebookInput\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </EditPhonebookLabel>\n      <EditPhonebookLabel>\n        Number\n        <EditPhonebookInput\n          type=\"tel\"\n          name=\"phone\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </EditPhonebookLabel>\n    \n      <Button\n        type=\"submit\"\n        colorScheme=\"messenger\"\n        borderWidth=\"1px\"\n        borderColor=\"messenger\"\n        m=\"12px auto 2px auto\"\n        p=\"2px 20px 4px 20px\"\n        fontSize=\"24px\"\n        _hover={{\n          bg: 'messenger',\n          color: 'white',\n          borderWidth: '1px',\n          borderColor: 'orange',\n          fontSize: '25',\n        }}\n        _active={{\n          bg: 'tomato',\n          color: 'teal.500',\n        }}\n        _selected={{\n          bg: 'tomato',\n          color: 'white',\n        }}\n      >\n        Save change\n      </Button>\n    </EditPhonebookForm>\n  );\n}\n","import { useNavigate, useParams } from 'react-router-dom';\n// import { useGetContactByIdQuery } from '../../redux/contactsSliceApi';\nimport { Overlay, Modal, ModalTitle } from './EditContact.styled';\nimport EditForm from '../../components/EditForm/EditForm';\nimport { Button } from '@chakra-ui/react';\n\nexport default function EditContact({ name, number }) {\n  const params = useParams();\n  const contactId = params.id;\n  // const contactName = params.name;\n  //   console.log('contactId in EditContact:', contactId );\n  //  console.log('params:', params);\n\n  const navigate = useNavigate();\n\n  const closeModal = () => navigate('/');\n\n  const handleUpdateContact = () => {\n    closeModal();\n  };\n\n  return (\n    <Overlay>\n      <Modal>\n        <ModalTitle>You can make changes to this contact</ModalTitle>\n\n        <EditForm\n          initialValues={{\n            id: contactId,\n            name: name,\n            number: number,\n          }}\n          onSubmit={handleUpdateContact}\n        />\n\n        <Button\n          type=\"button\"\n          onClick={closeModal}\n          colorScheme=\"messenger\"\n          borderWidth=\"1px\"\n          borderColor=\"messenger\"\n          m=\"12px auto 0 auto\"\n          p=\"2px 20px 4px 20px\"\n          fontSize=\"24px\"\n          _hover={{\n            bg: 'messenger',\n            color: 'white',\n            borderWidth: '1px',\n            borderColor: 'orange',\n            fontSize: '26',\n          }}\n          _active={{\n            bg: 'tomato',\n            color: 'teal.500',\n          }}\n          _selected={{\n            bg: 'tomato',\n            color: 'white',\n          }}\n        >\n          Close\n        </Button>\n      </Modal>\n    </Overlay>\n  );\n}\n"],"names":["localStrg","save","key","value","serializedState","JSON","stringify","localStorage","setItem","error","console","log","message","load","getItem","undefined","parse","del","removeItem","Overlay","styled","Modal","ModalTitle","EditPhonebookForm","EditPhonebookLabel","EditPhonebookInput","EditPhonebookCheckbox","EditPhonebookCheckboxLabel","EditForm","initialValues","onSubmit","useUpdateContactMutation","updateContact","contacts","useGetContactsQuery","data","RENDER_STORAGE_KEY","contactForEdit","filter","contact","id","corectionContacts","useState","at","name","setName","number","setNumber","personal","setPersonal","handleChange","event","target","handleSubmit","preventDefault","updateLocalStorage","correctContactPersonIndex","currentContactsState","find","findIndex","push","splice","editContactToLocal","contactsFromBack","map","addContactToLocal","type","checked","onChange","pattern","title","required","colorScheme","borderWidth","borderColor","m","p","fontSize","_hover","bg","color","_active","_selected","EditContact","contactId","useParams","navigate","useNavigate","closeModal","onClick"],"sourceRoot":""}