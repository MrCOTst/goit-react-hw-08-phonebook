{"version":3,"file":"static/js/303.7b78408d.chunk.js","mappings":"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","sources":["redux/selectors.js","components/Filter/Filter.styled.js","components/Button/Button.styled.js","components/Button/Button.jsx","components/StatusFilter/StatusFilter.styled.js","components/StatusFilter/StatusFilter.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/Contact/Contact.styled.js","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx"],"sourcesContent":["export const selectFilterValue = state => state.filter.filter;\nexport const selectFilterStatus = state => state.filter.status;\n\n","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1, 875;\n  padding: 10px, 5px;\n  margin: 0, 0, 0, 20px;\n`;\n\nexport const FilterInput = styled.input`\n  font: inherit;\n  padding: 8px;\n  margin: 8px 0 8px 8px;\n  max-width: 80%;\n  border-radius: 8px;\n  border-color: blue;\n`;\n\nexport const FilterDiv = styled.div`\ndisplay: flex;\n/* justify-content: space-between; */\nalign-items: center;\nmargin-left: 50px;\n`;\n\nexport const FilterTitle = styled.h2`\nmargin-left: 50px;\n`;","import styled from 'styled-components';\n\nexport const ButtonFilter = styled.button`\ndisplay: inline-flex;\n    padding: 8px 12px;\n    border-radius: 4px;\n    border: solid 1px blue;\n    font: inherit;\n    cursor: pointer;\n    background-color: #fff;\n\n    :hover {\n    background-color: #1565c0;\n    color: #fff;\n    transform: scale(1.02);\n  }\n  \n  :active {\n    background-color: #1565c0;\n    color: #fff;\n    box-shadow: 2px 2px 5px #fc894d;\n  }\n\n`;","import { ButtonFilter } from './Button.styled';\n\nexport const Button = ({\n  selected = false,\n  type = 'button',\n  children,\n  ...otherProps\n}) => {\n  return (\n    <ButtonFilter\n      style={\n        selected === false\n          ? { backgroundColor: ` #fff`, color: `#000` }\n          : { backgroundColor: `#1976d2`, color: `#fff`}\n      }\n      type={type}\n      {...otherProps}\n    >\n      {children}\n    </ButtonFilter>\n  );\n};\n","import styled from \"styled-components\";\n\n\nexport const WraperFilterStatus = styled.div`\ndisplay: flex;\n  gap: 8px;\n  margin-left: 50px;\n`","import { useSelector, useDispatch } from 'react-redux';\nimport { Button } from 'components/Button/Button';\nimport { statusFilters } from 'redux/constants';\nimport { selectFilterStatus } from 'redux/selectors';\nimport { setStatusFilter } from 'redux/filterSlice';\nimport { WraperFilterStatus } from './StatusFilter.styled';\n\nexport const StatusFilter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilterStatus);\n\n  const handleFilterChange = filter => dispatch(setStatusFilter(filter));\n\n  return (\n    <WraperFilterStatus>\n      <Button\n        selected={filter === statusFilters.all}\n        onClick={() => handleFilterChange(statusFilters.all)}\n      >\n        All\n      </Button>\n\n      <Button\n        selected={filter === statusFilters.personal}\n        onClick={() => handleFilterChange(statusFilters.personal)}\n      >\n        Personal\n      </Button>\n\n      <Button\n        selected={filter === statusFilters.others}\n        onClick={() => handleFilterChange(statusFilters.others)}\n      >\n        Others\n      </Button>\n    </WraperFilterStatus>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilterValue } from 'redux/selectors';\nimport { setFilter } from 'redux/filterSlice';\nimport { FilterLabel, FilterInput, FilterDiv, FilterTitle } from './Filter.styled';\nimport { RiSearchLine } from 'react-icons/ri';\nimport { StatusFilter } from 'components/StatusFilter/StatusFilter';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilterValue);\n\n  const handleFilterChange = filter => dispatch(setFilter(filter.target.value));\n\n  return (\n    <FilterLabel>\n      <FilterTitle>Find contacts by Name</FilterTitle>\n      <StatusFilter />\n      <FilterDiv>\n        <RiSearchLine\n          style={{\n            width: 36,\n            height: 36,\n            borderRadius: `8px`,\n            borderColor: `blue`,\n          }}\n        />\n        <FilterInput\n          type=\"text\"\n          value={filter}\n          onChange={handleFilterChange}\n        ></FilterInput>\n      </FilterDiv>\n    </FilterLabel>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const ContactUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: stretch;\n  margin-top: 20px;\n  margin-right: auto;\n  padding: 10px;\n  font-size: 24px;\n  background-color: #c3e6afea;\n  border-radius: 10px;\n  border: 2px solid rgba(0, 0, 0, 0.25);\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 8px;\n  padding: 5px 5px;\n  border: 2px solid rgba(0, 0, 0, 0.25);\n  border-radius: 10px;\n\n  :last-child {\n    margin-bottom: 0;\n  }\n\n  :hover,\n  :focus {\n    border: 2px solid;\n    background-color: #21d4f3;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  }\n`;\n\n","import styled from 'styled-components';\n\nexport const ContactButton = styled.button`\ndisplay: inline-flex;\n  align-items: center;\n  justify-content: center;\n  margin: 8px 10px 8px 20px;\n  padding: 8px 8px 8px 8px;\n  border-radius: 4px;\n  border: none;\n  height: 30px;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1, 875;\n  text-transform: uppercase;\n  background-color: #2196f3;\n  color: #ffffff;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  cursor: pointer;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    border: 2px solid;\n    background-color: #21d4f3;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n    /* transform: scale(1.01); */\n  }\n`;\n\nexport const ContactSpanDiv = styled.div`\ndisplay: flex;\njustify-content: space-between;\nmargin-left: 5px;\nmargin-right: auto;\n`;\n\nexport const ContactButtonDiv = styled.div`\ndisplay: flex;\njustify-content: space-between;\n`;\n\nexport const ContactCheckbox = styled.input`\ncolor: aliceblue;\n`","import { ContactButton, ContactSpanDiv, ContactButtonDiv } from './Contact.styled';\nimport { useDeleteContactMutation } from '../../redux/contactsSliceApi';\nimport { useNavigate } from 'react-router-dom';\nimport { RiFunctionFill } from 'react-icons/ri';\nimport { RiStarSFill } from 'react-icons/ri';\nimport { RiDeleteBin5Line } from 'react-icons/ri';\nimport { RiEdit2Fill } from 'react-icons/ri';\n\nexport default function Contact({ name, phone, id, personal }) {\n  // console.log('name:', {name, phone, id})\n  const navigate = useNavigate();\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n  \n  return (\n    <>\n      {personal === false ? (\n        <RiFunctionFill\n          style={{\n            width: 24,\n            height: 24,\n          }}\n        />\n      ) : (\n        <RiStarSFill\n          style={{\n            color: `orange`,\n            width: 24,\n            height: 24,\n          }}\n        />\n      )}\n\n      <ContactSpanDiv>\n      <span>{name}</span> :\n      <span>{phone}</span>\n      </ContactSpanDiv>\n      \n\n<ContactButtonDiv>\n<ContactButton\n        type=\"button\"\n        onClick={() => deleteContact(id)}\n        disabled={isLoading}\n      >\n        <RiDeleteBin5Line\n          style={{\n            color: `orange`,\n            width: 24,\n            height: 24,\n          }}\n        />\n        Delete\n      </ContactButton>\n      <ContactButton type=\"button\" onClick={() => navigate(`/${id}`)}>\n        <RiEdit2Fill\n          style={{\n            color: `orange`,\n            width: 24,\n            height: 24,\n          }}\n        />\n        Edit\n      </ContactButton>\n</ContactButtonDiv>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { selectFilterStatus, selectFilterValue } from 'redux/selectors';\nimport { useSelector } from 'react-redux';\nimport { ContactUl, ContactItem } from './ContactList.styled';\nimport { useGetContactsQuery } from '..//../redux/contactsSliceApi';\nimport Contact from 'components/Contact/Contact';\n\nexport default function ContactList() {\n  const filterValue = useSelector(selectFilterValue);\n  const filterStatus = useSelector(selectFilterStatus);\n  // console.log(\"filterStatus:\", filterStatus)\n\n  const { data: contacts, error, isLoading } = useGetContactsQuery();\n  // console.log('data:', contacts);\n  // console.log('error:', error);\n  // console.log('isLoading:', isLoading);\n\n  let getVisibleContacts = (contacts, filter, status) => {\n    if (contacts)\n      switch (status) {\n        case 'personal':\n          return contacts\n            .filter(contact =>\n              contact.name.toLowerCase().includes(filter.toLowerCase())\n            )\n            .filter(contact => contact.personal === true);\n\n        case 'others':\n          return contacts\n            .filter(contact =>\n              contact.name.toLowerCase().includes(filter.toLowerCase())\n            )\n            .filter(contact => contact.personal === false);\n\n        default:\n          return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(filter.toLowerCase())\n          );\n      }\n  };\n\n  const visibleContacts = getVisibleContacts(\n    contacts,\n    filterValue,\n    filterStatus\n  );\n\n  return (\n    <>\n      {error && <p>Error loading, please try again </p>}\n\n      {isLoading ? (\n        <b>Loading...</b>\n      ) : (\n        <ContactUl>\n          {visibleContacts.map(({ name, phone, id, personal }) => (\n            <ContactItem\n              key={id}\n              style={\n                personal === false\n                  ? { backgroundColor: ` #e1c7e9` }\n                  : { backgroundColor: `#00fff2` }\n              }\n            >\n              <Contact name={name} phone={phone} id={id} personal={personal} />\n            </ContactItem>\n          ))}\n        </ContactUl>\n      )}\n    </>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.number.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const ContactsTitle = styled.h2`\n/* color: white; */\npadding: 10px 5px 10px 50px\n`","import Filter from '../../components/Filter/Filter';\nimport ContactList from '../../components/ContactList/ContactList';\nimport { ContactsTitle } from './Home.styled';\n\nexport default function Home() {\n  return (\n    <main>\n      <Filter />\n      <ContactsTitle>Contacts</ContactsTitle>\n      <ContactList />\n    </main>\n  );\n}\n"],"names":["selectFilterValue","state","filter","selectFilterStatus","status","FilterLabel","styled","FilterInput","FilterDiv","FilterTitle","ButtonFilter","Button","selected","type","children","otherProps","style","backgroundColor","color","WraperFilterStatus","StatusFilter","dispatch","useDispatch","useSelector","handleFilterChange","setStatusFilter","statusFilters","onClick","width","height","borderRadius","borderColor","value","onChange","setFilter","target","ContactUl","ContactItem","ContactButton","ContactSpanDiv","ContactButtonDiv","Contact","name","phone","id","personal","navigate","useNavigate","useDeleteContactMutation","deleteContact","isLoading","disabled","ContactList","filterValue","filterStatus","useGetContactsQuery","contacts","data","error","visibleContacts","contact","toLowerCase","includes","getVisibleContacts","map","ContactsTitle","Home"],"sourceRoot":""}